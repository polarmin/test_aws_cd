name: 프론트엔드 배포

on:
  push:
    branches: #target
      - dev
      - main
    paths:
      - "client/**"
  pull_request:
    branches: #target
      - dev
      - main
    paths:
      - "client/**"
  workflow_dispatch:

env:
  NODE_ENV: production

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "yarn"
          cache-dependency-path: client/yarn.lock
      - name: Generate Environment Variables File for Production
        run: |
          cd client
          echo "BE_URL=$BE_URL" >> .env.production
        env:
          BE_URL: ${{ secrets.BE_URL }}
      - name: build client files
        working-directory: ./client
        run: |
          yarn install
          yarn build
      - name: deploy
        uses: appleboy/ssh-action@master # ssh 접속을 사용
        with: # 함께 사용할 것
          host: ${{ secrets.AWS_SSH_HOST }}
          username: ${{ secrets.AWS_SSH_USERNAME }}
          key: ${{ secrets.AWS_SSH_KEY }}
          port: ${{ secrets.AWS_SSH_PORT }}
          script: | # 서버에 접속 후 사용 할 스크립트
            cd test_aws_cd
            git pull
            echo "> git clone update"
            pm2 kill
            cd client
            yarn install
            yarn build
            pm2 restart picnic
            exit
